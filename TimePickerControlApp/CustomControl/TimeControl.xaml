<UserControl x:Class="TimePickerControlApp.CustomControl.TimeControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:TimePickerControlApp.CustomControl"
             xmlns:vm="clr-namespace:TimePickerControlApp.ViewModel"
             xmlns:system="clr-namespace:System;assembly=mscorlib" 
             mc:Ignorable="d">
    <UserControl.Resources>
        <Image x:Key="MyClockImage" Source="{StaticResource TimePickerImage}"/>
        <Image x:Key="MyCrossImage" Source="{StaticResource CrossImage}"/>
        <Image x:Key="MyCheckMarkImage" Source="{StaticResource CheckMarkImage}"/>
        <ControlTemplate x:Key="RoundButton">
            <Ellipse Height="25" Width="25" >
                <Ellipse.Fill>
                    <ImageBrush Stretch="UniformToFill" ImageSource="{StaticResource TimePickerImage}"/>
                </Ellipse.Fill>
            </Ellipse>
        </ControlTemplate>
        <Style x:Key="ListViewItemStyle" TargetType="ListViewItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border Name="_Border"
                                Padding="2"
                                SnapsToDevicePixels="true" Height="30">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="_Border" Property="Background" Value="LightBlue"/>
                                <Setter Property="FontSize" Value="20"/>
                                <Setter Property="FontWeight" Value="DemiBold"/>
                                <Setter Property="Foreground" Value="DarkBlue"/>
                                <Setter Property="Padding" Value="8"/>
                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter TargetName="_Border" Property="Background" Value="Transparent"/>
                                <Setter Property="FontSize" Value="18"/>
                                <Setter Property="Padding" Value="8"/>
                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="_Border" Property="Background" Value="Transparent"/>
                                <Setter Property="FontSize" Value="18"/>
                                <Setter Property="Padding" Value="8"/>
                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                <Setter Property="Foreground" Value="DarkGray"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsEnabled" Value="False"></Condition>
                                    <Condition Property="IsSelected" Value="True"></Condition>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter Property="FontWeight" Value="Normal"></Setter>
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid Background="Transparent">
        <Grid.DataContext>
            <vm:TimeControlViewModel/>
        </Grid.DataContext>
        <Border Grid.Row="0" Grid.Column="0" BorderThickness="2,2,2,2" BorderBrush="Black" Padding="0" Margin="0">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="90*"/>
                    <ColumnDefinition Width="20*"/>
                </Grid.ColumnDefinitions>

                <DatePickerTextBox x:Name="txtDatePicker" Text="{Binding TimeText, Mode=TwoWay, StringFormat= '  '}" 
                                   FontSize="16" HorizontalContentAlignment="Stretch"
                                   VerticalContentAlignment="Center" TextChanged="TextChanged"/>
                <Button Grid.Column="1" BorderThickness="0" BorderBrush="Transparent" Content="{StaticResource MyClockImage}" Template="{StaticResource RoundButton}" Command="{Binding TimePickCommand}" />
            </Grid>
        </Border>
        <Popup IsOpen="{Binding IsPopupOpen, Mode=TwoWay}" Placement="Bottom" Margin="10,10,0,13" HorizontalAlignment="Left" VerticalAlignment="Top" Width="194" Height="196">
            <Border Grid.Row="0" Grid.Column="0" BorderThickness="2,0,2,2" BorderBrush="Black" Padding="0" Margin="0">
                <Grid Background="White">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="40"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="20*"/>
                        <ColumnDefinition Width="20*"/>
                        <ColumnDefinition Width="20*"/>
                    </Grid.ColumnDefinitions>
                    <ListView ItemsSource="{Binding Hours, Mode=TwoWay}" ItemContainerStyle="{DynamicResource ListViewItemStyle}"  
                              Grid.Row="0" Grid.RowSpan="5" Grid.Column="0" ScrollViewer.VerticalScrollBarVisibility="Hidden" BorderThickness="0,0,1,1"
                              SelectedValue="{Binding SelectedHour, Mode=TwoWay}" PreviewKeyDown="ListView_PreviewKeyDown" Name="lstHour"/>

                    <ListView ItemsSource="{Binding Minutes, Mode=TwoWay}" ItemContainerStyle="{DynamicResource ListViewItemStyle}"
                              Grid.Row="0" Grid.RowSpan="5" Grid.Column="1" ScrollViewer.VerticalScrollBarVisibility="Hidden" BorderThickness="1,0,2,1"
                              SelectedValue="{Binding SelectedMin, Mode=TwoWay}" PreviewKeyDown="ListView_PreviewKeyDown" Name="lstMin"/>

                    <ListView ItemsSource="{Binding AMPM, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ItemContainerStyle="{DynamicResource ListViewItemStyle}"  
                              Grid.Row="2" Grid.RowSpan="3" Grid.Column="2" ScrollViewer.VerticalScrollBarVisibility="Hidden" BorderThickness="0,0,0,1" Margin="0,-2,0,0"
                              SelectedValue="{Binding SelectedAMPM, Mode=TwoWay}" SelectedIndex="{Binding SelectedIndexAMPM, Mode=TwoWay}" IsEnabled="{Binding Is12HourClock, Mode=TwoWay}"/>
                    
                    <Grid Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="3">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Button Content="{StaticResource MyCheckMarkImage}" BorderThickness="0,1,1,0" Grid.Column="0" Command="{Binding DoneCommand}"/>
                        <Button Content="{StaticResource MyCrossImage}"  BorderThickness="1,1,0,0" Grid.Column="1"  Command="{Binding CloseCommand}"/>
                    </Grid>
                </Grid>
            </Border>
        </Popup>
    </Grid>
</UserControl>
